##############################
# => BASIC SETTINGS
##############################

# Use fish
set-option -g default-shell /usr/local/bin/fish

# Unbind default prefix and set it to Ctrl+a cause easier
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# tmux display things in 256 colors
# set -g default-terminal "tmux-256color"
set -g default-terminal "xterm-256color"
# set -g default-terminal "alacritty"

# set -g status-utf8 on

set -g history-limit 50000

# Automatically renumber tmux windows
set -g renumber-windows on

# For nested tmux sessions
bind-key a send-prefix

# Activity Monitoring
setw -g monitor-activity off
set -g visual-activity off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on
# set -g aggressive-resize off

# make delay shorter
set -sg escape-time 0

# tile all windows
unbind =
bind = select-layout tiled

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1

# Don't rename my windows
set-option -g allow-rename off

# 12-hour clock mode
set-window-option -g clock-mode-style 12

##############################
# => KEY BINDINGS
##############################

# reload config file
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# Smart pane switching with awareness of vim splits
# vim-tmux-navigator
## WORKS
#is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'

# synchronize all panes in a window
bind P setw synchronize-panes

# enable mouse support for switching panes/windows
# NOTE: This breaks selecting/copying text on OSX
# To select text as expected, hold Option to disable it (iTerm2)
set -g mouse on

# set vi mode for copy mode
# setw -g mode-keys vi
set-window-option -g mode-keys vi

# more settings to make copy-mode more vim-like
unbind [
bind Escape copy-mode
unbind p
# bind p paste-buffer
bind p run "tmux set-buffer \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"

# Setup 'v' to begin selection as in Vim
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
# bind-key -Tcopy-mode-vi 'y' copy-pipe 'xclip -in -selection clipboard'
bind -Tcopy-mode-vi 'y' send -X copy-pipe "xclip -in -selection clipboard" \; display-message "copied to system clipboard"
bind-key -Tcopy-mode-vi 'r' send -X rectangle-toggle
bind-key -Tcopy-mode-vi Escape send -X cancel

# i don't ever want to do this on purpose
# bind-key    -T prefix    C-z              suspend-client
unbind -T prefix C-z


is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind -n C-H if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-T if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-N if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-S if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-H select-pane -L
# bind -n C-T select-pane -D
# bind -n C-N select-pane -U
# bind -n C-S select-pane -R
bind -n C-H if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-T if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-N if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-S if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-H if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-T if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-N if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-S if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# bind-key -T copy-mode-vi C-H select-pane -L
# bind-key -T copy-mode-vi C-T select-pane -D
# bind-key -T copy-mode-vi C-N select-pane -U
# bind-key -T copy-mode-vi C-S select-pane -R
# bind-key -T copy-mode-vi C-\ select-pane -l

bind -n C-k send-keys C-l \; send-keys -R \; clear-history

##############################
# => PLUGINS
##############################
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-pain-control'
# set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @resurrect-processes 'false'

# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'

